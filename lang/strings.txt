Address
Address reuse
Address: %s
Amount commitment
API
Asset commitment
Asset ID
Bits
Block Challenge
Block height
Block not found
Block %s
Block Solution
Block #%s: %s
Block timestamp
Broadcast raw transaction (hex)
Broadcast transaction
Broadcast tx
Cancel
Coinbase
compared to bitcoind's suggested fee of %s sat/vB for confirmation within 2 blocks
Confidential
Confirmed
Confirmed received
Confirmed spent
Confirmed tx count
Confirmed unspent
Depth
Details
ETA
Fee
Go
Height
In best chain
In best chain (%s confirmations)
Included in Block
in %s blocks (%s from tip)
Issuance
Issuance amount
Issuance blinding nonce
Issuance entropy
It is possible to tell the change output apart because you're sending to a different script type than the one you're spending from.
lang_id
lang_name
Likely self-transfer
Loading...
Load more
Lock time
ltr
Mempool
Merkle root
New asset
Newer
Next
Nonce
Nonstandard
No outputs
No recent transactions
No reissuance
No results found
nSequence
Older
OP_RETURN data
Opted in
Orphaned
Outpoint
Output in parent chain
overpaying by %s%
Page Not Found
Peg-out
Peg-out address
Peg-out ASM
Peg-out to
Powered by esplora
Prev
Previous
Previous output address
Previous output script
Privacy gotchas
(RBF)
Recent Blocks
Recent transactions
Reissuance
Reissuance commitment
Reissuance keys
Replace by fee
Round payment amount
sat/vbyte
%s blocks
Scan QR
%s Confirmations
scriptPubKey (asm)
scriptPubKey (hex)
scriptSig (asm)
scriptSig (hex)
Search for block height, hash, transaction, or address
SegWit fee savings
Sending exact amounts (with no change) is an indication the bitcoins likely didn't change hands.
Sending to a different script type
%s from tip
Size
Size (KB)
%s of %s Transactions
%s outputs
Spending tx
Spent by
%s (%s sat/vB)
Status
%s Transactions
style.css
There's an indication that one output is more likely to be the change because some inputs would've been unnecessary if it was the payment.
This transaction could save %s on fees by upgrading to native SegWit-Bech32 or %s by upgrading to Segwit-P2SH
This transaction doesn't violate any of the privacy gotchas we cover. Read on other potential ways it might leak privacy.
This transaction has unnecessary inputs that are not typically added by wallet software.
This transaction re-uses addresses. This makes it trivial to track your transactions over time and link them together. Note that we currently only look for address reuse within the transaction, not across the history.
This transaction saved %s on fees by upgrading to native SegWit-Bech32
This transaction saved %s on fees by upgrading to SegWit and could save %s more by fully upgrading to native Segwit-Bech32
Timestamp
Total fees
Total size
Total transactions
Total tx count
Total unspent
Transaction
Transaction fees
Transaction not found
Transactions
Transaction: %s
TXID
txid:vout
Type
Unconfirmed
Unconfirmed received
Unconfirmed spent
Unconfirmed tx count
Unnecessary input heuristic
Unspent
Using round payment amounts gives an indication of which output is the payment and which is the change. Padding payment amounts to use all available precision resolves this issue.
Value
Value commitment
Version
Virtual size
We encountered an error. Please try again later.
Weight (KWU)
Weight units
Witness
